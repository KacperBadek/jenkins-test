name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  DOCKER_USERNAME: hasacz325
  APP_NAME: before-test

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 21

      - name: Install dependencies
        run: npm ci
        working-directory: ./app

      - name: Run tests
        run: npm test
        working-directory: ./app

      - name: Run tests with coverage
        run: npm run test:coverage
        working-directory: ./app

      - name: Archive test coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: ./app/coverage/
          retention-days: 7

      - name: Upload to Codecov
        uses: codecov/codecov-action@v4
        with:
          directory: ./app/coverage/

      - name: Build app (optional)
        run: npm run build || echo "No build step"
        working-directory: ./app

      - name: Build Docker image
        run: |
          docker build -t $DOCKER_USERNAME/$APP_NAME:latest ./app

  push-to-dockerhub:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push docker image
        uses: docker/build-push-action@v6
        with:
          context: ./app
          file: ./app/Dockerfile
          push: true
          tags: ${{ env.DOCKER_USERNAME }}/${{ env.APP_NAME }}:latest

  deploy-app:
    needs: push-to-dockerhub
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Use custom deploy action
        uses: ./.github/actions/custom-deploy
        with:
          environment: production
          version: 1.0.0
          notify-team: true

      - name: Show deploy outputs
        run: |
          echo "Deployment URL: ${{ steps.set-outputs.outputs.deployment-url }}"
          echo "Deployment Time: ${{ steps.set-outputs.outputs.deployment-time }}"